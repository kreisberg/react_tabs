{"version":3,"sources":["components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["Tabs","tabs","selectedTabId","selectedOnTab","selectedTab","find","id","className","map","tab","cn","href","onClick","handleOnClick","title","content","cat","App","useState","isDarkMode","setDarkMode","setSelectedTab","type","onChange","ReactDOM","render","document","getElementById"],"mappings":"kNASaA,EAAwB,SAAC,GAI/B,IAHLC,EAGI,EAHJA,KAGI,IAFJC,qBAEI,MAFYD,EAAK,GAEjB,EADJE,EACI,EADJA,cAEMC,EAAcH,EAAKI,MAAK,qBAAGC,KAAgBJ,KAQjD,OACE,sBAAK,UAAQ,gBAAb,UACE,qBAAKK,UAAU,gBAAf,SACE,6BACGN,EAAKO,KAAI,SAACC,GAAD,OACR,oBACE,UAAQ,MAERF,UAAWG,IAAG,CACZ,YAAaD,EAAIH,KAAOJ,IAJ5B,SAOE,mBACES,KAAI,WAAMF,EAAIH,IACd,UAAQ,UACRM,QAAS,YArBD,SAACH,GACjBA,EAAIH,KAAOJ,GACbC,EAAcM,GAoBFI,CAAcJ,IAJlB,SAOGA,EAAIK,SAZFL,EAAIH,WAmBjB,qBAAKC,UAAU,QAAQ,UAAQ,aAA/B,gBACGH,QADH,IACGA,OADH,EACGA,EAAaW,cCzCTd,EAAc,CACzB,CACEK,GAAI,QACJQ,MAAO,QACPC,QAAS,6CACTC,IAAK,GAEP,CACEV,GAAI,QACJQ,MAAO,QACPC,QAAS,0DACTC,IAAK,GAEP,CACEV,GAAI,QACJQ,MAAO,QACPC,QAAS,+DACTC,IAAK,GAEP,CACEV,GAAI,QACJQ,MAAO,QACPC,QAAS,qDACTC,IAAK,IAIIC,EAAgB,WAC3B,MAAkCC,oBAAS,GAA3C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAsCF,mBAASjB,EAAK,IAApD,mBAAOG,EAAP,KAAoBiB,EAApB,KAEA,OACE,sBAAKd,UAAWG,IACd,UACA,CACE,YAAaS,EACb,cAAeA,IAJnB,UAQE,qBAAKZ,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,wBAAOA,UAAU,SAAjB,UACE,uBAAOe,KAAK,WAAWC,SAAU,kBAAMH,GAAaD,MACpD,sBAAMZ,UAAU,eAAhB,sBAKN,oBACEA,UAAWG,IACT,QACA,CACE,mBAAoBS,IAJ1B,mCAQsBf,EAAYU,SAGlC,cAAC,EAAD,CACEb,KAAMA,EACNC,cAAeE,EAAYE,GAC3BH,cAAekB,IAGjB,qBACE,uBAAejB,EAAYY,KAC3BT,UAAS,aAAQH,EAAYY,WCzErCQ,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d3db849c.chunk.js","sourcesContent":["import cn from 'classnames';\nimport { Tab } from './types/Tab';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  selectedOnTab: (tab: Tab) => void,\n};\n\nexport const Tabs: React.FC<Props> = ({\n  tabs,\n  selectedTabId = tabs[0],\n  selectedOnTab,\n}) => {\n  const selectedTab = tabs.find(({ id }) => id === selectedTabId);\n\n  const handleOnClick = (tab: Tab): void | '' => {\n    if (tab.id !== selectedTabId) {\n      selectedOnTab(tab);\n    }\n  };\n\n  return (\n    <div data-cy=\"TabsComponent\">\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab: Tab) => (\n            <li\n              data-cy=\"Tab\"\n              key={tab.id}\n              className={cn({\n                'is-active': tab.id === selectedTabId,\n              })}\n            >\n              <a\n                href={`#${tab.id}`}\n                data-cy=\"TabLink\"\n                onClick={() => {\n                  handleOnClick(tab);\n                }}\n              >\n                {tab.title}\n              </a>\n            </li>\n          ))}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTab?.content}\n      </div>\n\n    </div>\n  );\n};\n","import React, { useState } from 'react';\nimport cn from 'classnames';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './components/Tabs/types/Tab';\n\nexport const tabs: Tab[] = [\n  {\n    id: 'tab-1',\n    title: 'Tab 1',\n    content: 'First week with React. BTW the second too.',\n    cat: 1,\n  },\n  {\n    id: 'tab-2',\n    title: 'Tab 2',\n    content: 'Ihor said he was upset. OMG whats wrong with us, dudes.',\n    cat: 2,\n  },\n  {\n    id: 'tab-3',\n    title: 'Tab 3',\n    content: 'But we are sweet bulochki and can do it! Move your bulochki!',\n    cat: 3,\n  },\n  {\n    id: 'tab-4',\n    title: 'Tab 4',\n    content: 'Me, when you dropped the edits under this artwork.',\n    cat: 4,\n  },\n];\n\nexport const App: React.FC = () => {\n  const [isDarkMode, setDarkMode] = useState(false);\n  const [selectedTab, setSelectedTab] = useState(tabs[0]);\n\n  return (\n    <div className={cn(\n      'section',\n      {\n        'dark-mode': isDarkMode,\n        'light-mode': !isDarkMode,\n      },\n    )}\n    >\n      <div className=\"container\">\n        <div className=\"switch-checkbox\">\n          <label className=\"switch\">\n            <input type=\"checkbox\" onChange={() => setDarkMode(!isDarkMode)} />\n            <span className=\"slider round\"> </span>\n          </label>\n        </div>\n      </div>\n\n      <h1\n        className={cn(\n          'title',\n          {\n            'dark-mode--title': isDarkMode,\n          },\n        )}\n      >\n        {`Selected tab is ${selectedTab.title}`}\n      </h1>\n\n      <Tabs\n        tabs={tabs}\n        selectedTabId={selectedTab.id}\n        selectedOnTab={setSelectedTab}\n      />\n\n      <div\n        data-cy={`cat${selectedTab.cat}`}\n        className={`cat${selectedTab.cat}`}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}